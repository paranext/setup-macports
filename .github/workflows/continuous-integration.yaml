name: 'Continuous Integration'
on:
  workflow_dispatch:
  push:
    branches-ignore:
      - v1
    tags-ignore:
      - v1.*

jobs:
  run-testsuite:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-13', 'macos-14', 'macos-15']
    runs-on: '${{ matrix.os }}'
    name: 'Run Testsuite'
    steps:
      - uses: actions/checkout@v4
      - name: 'Run testsuite'
        run: development/testsuite

  install-macports:
    strategy:
      matrix:
        os: ['macos-13', 'macos-14', 'macos-15']
        version: ['2.11.5']
        prefix: ['local']
        include:
          - os: 'macos-14'
            version: '2.11.5'
            prefix: 'package'
    runs-on: '${{ matrix.os }}'
    name: 'Install MacPorts'
    needs: 'run-testsuite'
    steps:
      - uses: actions/checkout@v4

      - uses: ./
        id: 'macports'
        with:
          parameters: 'testsuite/run-testsuite-on-${{ matrix.os }}-${{ matrix.prefix }}.yaml'

      - name: 'Validate installed MacPorts version'
        run: port version | grep -q 'Version: ${{ matrix.version }}'

      - name: 'Validate transmitted MacPorts prefix'
        run: >-
          test "${{ steps.macports.outputs.prefix }}" = '/opt/${{ matrix.prefix }}'
      - name: 'Validate transmitted MacPorts version'
        run: >-
          test "${{ steps.macports.outputs.version }}" = '${{ matrix.version }}'

      - run: /opt/${{ matrix.prefix }}/bin/port version

      - run: port version

      - name: 'Create cURL package'
        id: package
        if: matrix.prefix == 'package'
        run: |
          sudo port mdmg curl
          image=$(port work curl)/*.dmg
          printf 'image=%s\n' "${image}" >> ${GITHUB_OUTPUT}

      - name: 'Archive Installation Package Image'
        if: matrix.prefix == 'package'
        uses: actions/upload-artifact@v4
        with:
          name: "curl"
          path: "${{ steps.package.outputs.image }}"
